// <auto-generated />
using System;
using Listings_Portal.Tools;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Listings_Portal.Migrations
{
    [DbContext(typeof(ListingsDbContext))]
    [Migration("20250713031247_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Listings_Portal.Lib.Models.Entities.Hoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Fee")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Hoa");
                });

            modelBuilder.Entity("Listings_Portal.Lib.Models.Entities.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<double>("Bathrooms")
                        .HasColumnType("double precision");

                    b.Property<double>("Bedrooms")
                        .HasColumnType("double precision");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DaysOnMarket")
                        .HasColumnType("bigint");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("HoaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ListedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ListingAgentId")
                        .HasColumnType("integer");

                    b.Property<int?>("ListingOfficeId")
                        .HasColumnType("integer");

                    b.Property<string>("ListingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry (Point, 4326)");

                    b.Property<int>("LotSize")
                        .HasColumnType("integer");

                    b.Property<string>("MlsName")
                        .HasColumnType("text");

                    b.Property<string>("MlsNumber")
                        .HasColumnType("text");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SquareFootage")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("integer");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HoaId");

                    b.HasIndex("ListingAgentId");

                    b.HasIndex("ListingOfficeId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("Listings_Portal.Lib.Models.Entities.Realtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Realtor");
                });

            modelBuilder.Entity("Listings_Portal.Lib.Models.Entities.Listing", b =>
                {
                    b.HasOne("Listings_Portal.Lib.Models.Entities.Hoa", "Hoa")
                        .WithMany()
                        .HasForeignKey("HoaId");

                    b.HasOne("Listings_Portal.Lib.Models.Entities.Realtor", "ListingAgent")
                        .WithMany()
                        .HasForeignKey("ListingAgentId");

                    b.HasOne("Listings_Portal.Lib.Models.Entities.Realtor", "ListingOffice")
                        .WithMany()
                        .HasForeignKey("ListingOfficeId");

                    b.Navigation("Hoa");

                    b.Navigation("ListingAgent");

                    b.Navigation("ListingOffice");
                });
#pragma warning restore 612, 618
        }
    }
}
